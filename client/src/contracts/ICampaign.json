{
  "contractName": "ICampaign",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "durationDays",
              "type": "uint256"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "updatedInfoData",
          "type": "tuple"
        }
      ],
      "name": "updateAllInfoData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "newRewardData",
          "type": "tuple"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards[]",
          "name": "updatedRewardsData",
          "type": "tuple[]"
        }
      ],
      "name": "updateAllRewardsData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "newRewardData",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "rewardIndex",
          "type": "uint256"
        }
      ],
      "name": "updateRewardData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rewardIndex",
          "type": "uint256"
        }
      ],
      "name": "deleteReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "updateManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFactory",
          "type": "address"
        }
      ],
      "name": "updateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"newRewardData\",\"type\":\"tuple\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"}],\"name\":\"deleteReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationDays\",\"type\":\"uint256\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"updatedInfoData\",\"type\":\"tuple\"}],\"name\":\"updateAllInfoData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards[]\",\"name\":\"updatedRewardsData\",\"type\":\"tuple[]\"}],\"name\":\"updateAllRewardsData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"updateManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"newRewardData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"}],\"name\":\"updateRewardData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the Campaign contract\",\"kind\":\"dev\",\"methods\":{\"addReward((string,string,uint256,uint256,uint256,uint256,bool))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newRewardData\":\"Rewards Object that contains all the needed information following the Rewards struct for the campaign\"}},\"deleteCampaign()\":{\"details\":\"It's the entry point for deleting a campaign. Only the manager must be able to call it\"},\"deleteReward(uint256)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"rewardIndex\":\"uint256 Index of the reward to delete\"}},\"updateAllInfoData((string,string,uint256,uint256))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"updatedInfoData\":\"Info Object that contains all the new information following the Info struct for the campaign\"}},\"updateAllRewardsData((string,string,uint256,uint256,uint256,uint256,bool)[])\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"updatedRewardsData\":\"Rewards[] Array of Object that contains all the needed information following the Rewards struct for the campaign\"}},\"updateFactory(address)\":{\"details\":\"Used for mainly for pointing the right factory during the deletion\",\"params\":{\"newFactory\":\"address Address of the new factory\"}},\"updateManager(address)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newManager\":\"address Address of the new manager\"}},\"updateRewardData((string,string,uint256,uint256,uint256,uint256,bool),uint256)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newRewardData\":\"Rewards Object that contains the new data to set following the Rewards struct for the campaign\",\"rewardIndex\":\"uint256 Index of the reward to update\"}}},\"title\":\"ICampaign\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addReward((string,string,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Add a new reward level to the campaign.\"},\"deleteCampaign()\":{\"notice\":\"Delete the campaign.\"},\"deleteReward(uint256)\":{\"notice\":\"Delete a reward by its Id.\"},\"updateAllInfoData((string,string,uint256,uint256))\":{\"notice\":\"Update all the information in the struct Info for the campaign.\"},\"updateAllRewardsData((string,string,uint256,uint256,uint256,uint256,bool)[])\":{\"notice\":\"Update all Rewards by removing each current reward and then adding the new levels.\"},\"updateFactory(address)\":{\"notice\":\"Allow the factory to setup a new one in case of migration.\"},\"updateManager(address)\":{\"notice\":\"Allow the manager to setup a new one.\"},\"updateRewardData((string,string,uint256,uint256,uint256,uint256,bool),uint256)\":{\"notice\":\"Update the data of a specific reward regarding its id.\"}},\"notice\":\"The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/A/Programing/Projet_Final/Sparkup/contracts/interfaces/ICampaign.sol\":\"ICampaign\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/Programing/Projet_Final/Sparkup/contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0x330eea12404c895281a8b10ee4cc9b7c0ba14f8457b3adf48eb3f0f93af7ecd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://134910cee908cc870d20b63c340451572e135120a7f29696a1ce49c0fdcd96bc\",\"dweb:/ipfs/QmRUkZ1Ht7Lbu6h77T59EmY8VpQE72BWZFqCxadvdZCQBo\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.6;\r\n\r\n/**\r\n* @title ICampaign\r\n* @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\r\n* @dev Interface for the Campaign contract\r\n*/\r\ninterface ICampaign {\r\n\r\n    struct Rewards {\r\n        string title;\r\n        string description;\r\n        uint256 minimumContribution;\r\n        uint256 amount;\r\n        uint256 stockLimit;\r\n        uint256 nbContributors;\r\n        bool isStockLimited;\r\n    }\r\n\r\n    struct Info {\r\n        string title;\r\n        string description;\r\n        uint256 fundingGoal;\r\n        uint256 durationDays;\r\n    }\r\n\r\n    /**\r\n     * @notice Update all the information in the struct Info for the campaign.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign\r\n     */\r\n    function updateAllInfoData(Info memory updatedInfoData) external;\r\n\r\n    /**\r\n     * @notice Add a new reward level to the campaign.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign\r\n     */\r\n    function addReward(Rewards memory newRewardData) external;\r\n\r\n    /**\r\n     * @notice Update all Rewards by removing each current reward and then adding the new levels.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param updatedRewardsData Rewards[] Array of Object that contains all the needed information following the Rewards struct for the campaign\r\n     */\r\n    function updateAllRewardsData(Rewards[] memory updatedRewardsData) external;\r\n\r\n    /**\r\n     * @notice Update the data of a specific reward regarding its id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\r\n     * @param rewardIndex uint256 Index of the reward to update\r\n     */\r\n    function updateRewardData( Rewards memory newRewardData,uint256 rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete a reward by its Id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param rewardIndex uint256 Index of the reward to delete\r\n     */\r\n    function deleteReward(uint256 rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete the campaign.\r\n     * @dev It's the entry point for deleting a campaign. Only the manager must be able to call it\r\n     */\r\n    function deleteCampaign() external;\r\n\r\n    /**\r\n     * @notice Allow the manager to setup a new one.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newManager address Address of the new manager\r\n     */\r\n    function updateManager(address newManager) external;\r\n\r\n    /**\r\n     * @notice Allow the factory to setup a new one in case of migration.\r\n     * @dev Used for mainly for pointing the right factory during the deletion\r\n     * @param newFactory address Address of the new factory\r\n     */\r\n    function updateFactory(address newFactory) external;\r\n}\r\n",
  "sourcePath": "A:\\Programing\\Projet_Final\\Sparkup\\contracts\\interfaces\\ICampaign.sol",
  "ast": {
    "absolutePath": "/A/Programing/Projet_Final/Sparkup/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        1698
      ]
    },
    "id": 1699,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1619,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1620,
          "nodeType": "StructuredDocumentation",
          "src": "59:179:7",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 1698,
        "linearizedBaseContracts": [
          1698
        ],
        "name": "ICampaign",
        "nameLocation": "250:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 1635,
            "members": [
              {
                "constant": false,
                "id": 1622,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "302:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "295:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1621,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1624,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "325:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "318:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1623,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "318:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1626,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "355:19:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "347:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1625,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "347:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1628,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "393:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "385:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1627,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1630,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "418:10:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "410:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1629,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1632,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "447:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "439:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1631,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "439:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1634,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "477:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "472:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1633,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "472:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "276:7:7",
            "nodeType": "StructDefinition",
            "scope": 1698,
            "src": "269:230:7",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 1644,
            "members": [
              {
                "constant": false,
                "id": 1637,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "537:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "530:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1636,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1639,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "560:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "553:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1638,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "553:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1641,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "590:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "582:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1640,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "582:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1643,
                "mutability": "mutable",
                "name": "durationDays",
                "nameLocation": "620:12:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "612:20:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1642,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "514:4:7",
            "nodeType": "StructDefinition",
            "scope": 1698,
            "src": "507:133:7",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 1645,
              "nodeType": "StructuredDocumentation",
              "src": "648:271:7",
              "text": " @notice Update all the information in the struct Info for the campaign.\n @dev Only the manager must be able to call it.\n @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "91f43ccc",
            "id": 1651,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAllInfoData",
            "nameLocation": "934:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1648,
                  "mutability": "mutable",
                  "name": "updatedInfoData",
                  "nameLocation": "964:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "952:27:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$1644_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 1647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1646,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1644,
                      "src": "952:4:7"
                    },
                    "referencedDeclaration": 1644,
                    "src": "952:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$1644_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:29:7"
            },
            "returnParameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:7"
            },
            "scope": 1698,
            "src": "925:65:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1652,
              "nodeType": "StructuredDocumentation",
              "src": "998:254:7",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "d355f006",
            "id": 1658,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "1267:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1292:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1658,
                  "src": "1277:28:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$1635_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 1654,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1653,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1635,
                      "src": "1277:7:7"
                    },
                    "referencedDeclaration": 1635,
                    "src": "1277:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$1635_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1276:30:7"
            },
            "returnParameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:7"
            },
            "scope": 1698,
            "src": "1258:58:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1659,
              "nodeType": "StructuredDocumentation",
              "src": "1324:313:7",
              "text": " @notice Update all Rewards by removing each current reward and then adding the new levels.\n @dev Only the manager must be able to call it.\n @param updatedRewardsData Rewards[] Array of Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "ab1b498b",
            "id": 1666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAllRewardsData",
            "nameLocation": "1652:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "updatedRewardsData",
                  "nameLocation": "1690:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1673:35:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rewards_$1635_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ICampaign.Rewards[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1661,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1660,
                        "name": "Rewards",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1635,
                        "src": "1673:7:7"
                      },
                      "referencedDeclaration": 1635,
                      "src": "1673:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rewards_$1635_storage_ptr",
                        "typeString": "struct ICampaign.Rewards"
                      }
                    },
                    "id": 1662,
                    "nodeType": "ArrayTypeName",
                    "src": "1673:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$1635_storage_$dyn_storage_ptr",
                      "typeString": "struct ICampaign.Rewards[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1672:37:7"
            },
            "returnParameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:7"
            },
            "scope": 1698,
            "src": "1643:76:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1667,
              "nodeType": "StructuredDocumentation",
              "src": "1727:327:7",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\n @param rewardIndex uint256 Index of the reward to update"
            },
            "functionSelector": "2d757615",
            "id": 1675,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateRewardData",
            "nameLocation": "2069:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "2102:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "2087:28:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$1635_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 1669,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1668,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1635,
                      "src": "2087:7:7"
                    },
                    "referencedDeclaration": 1635,
                    "src": "2087:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$1635_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1672,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2124:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "2116:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2085:51:7"
            },
            "returnParameters": {
              "id": 1674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2145:0:7"
            },
            "scope": 1698,
            "src": "2060:86:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1676,
              "nodeType": "StructuredDocumentation",
              "src": "2154:175:7",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param rewardIndex uint256 Index of the reward to delete"
            },
            "functionSelector": "e7cf1ab7",
            "id": 1681,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "2344:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2365:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "2357:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:21:7"
            },
            "returnParameters": {
              "id": 1680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:7"
            },
            "scope": 1698,
            "src": "2335:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1682,
              "nodeType": "StructuredDocumentation",
              "src": "2395:149:7",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 1685,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2559:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2573:2:7"
            },
            "returnParameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2584:0:7"
            },
            "scope": 1698,
            "src": "2550:35:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1686,
              "nodeType": "StructuredDocumentation",
              "src": "2593:182:7",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param newManager address Address of the new manager"
            },
            "functionSelector": "58aba00f",
            "id": 1691,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "2790:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "2812:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1691,
                  "src": "2804:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2803:20:7"
            },
            "returnParameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2832:0:7"
            },
            "scope": 1698,
            "src": "2781:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1692,
              "nodeType": "StructuredDocumentation",
              "src": "2841:228:7",
              "text": " @notice Allow the factory to setup a new one in case of migration.\n @dev Used for mainly for pointing the right factory during the deletion\n @param newFactory address Address of the new factory"
            },
            "functionSelector": "d9f165dc",
            "id": 1697,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFactory",
            "nameLocation": "3084:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1694,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "3106:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1697,
                  "src": "3098:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3097:20:7"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3126:0:7"
            },
            "scope": 1698,
            "src": "3075:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1699,
        "src": "240:2890:7",
        "usedErrors": []
      }
    ],
    "src": "33:3099:7"
  },
  "legacyAST": {
    "absolutePath": "/A/Programing/Projet_Final/Sparkup/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        1698
      ]
    },
    "id": 1699,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1619,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1620,
          "nodeType": "StructuredDocumentation",
          "src": "59:179:7",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 1698,
        "linearizedBaseContracts": [
          1698
        ],
        "name": "ICampaign",
        "nameLocation": "250:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 1635,
            "members": [
              {
                "constant": false,
                "id": 1622,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "302:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "295:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1621,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1624,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "325:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "318:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1623,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "318:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1626,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "355:19:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "347:27:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1625,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "347:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1628,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "393:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "385:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1627,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1630,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "418:10:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "410:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1629,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1632,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "447:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "439:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1631,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "439:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1634,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "477:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 1635,
                "src": "472:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1633,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "472:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "276:7:7",
            "nodeType": "StructDefinition",
            "scope": 1698,
            "src": "269:230:7",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 1644,
            "members": [
              {
                "constant": false,
                "id": 1637,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "537:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "530:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1636,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1639,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "560:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "553:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1638,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "553:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1641,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "590:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "582:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1640,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "582:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1643,
                "mutability": "mutable",
                "name": "durationDays",
                "nameLocation": "620:12:7",
                "nodeType": "VariableDeclaration",
                "scope": 1644,
                "src": "612:20:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1642,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "514:4:7",
            "nodeType": "StructDefinition",
            "scope": 1698,
            "src": "507:133:7",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 1645,
              "nodeType": "StructuredDocumentation",
              "src": "648:271:7",
              "text": " @notice Update all the information in the struct Info for the campaign.\n @dev Only the manager must be able to call it.\n @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "91f43ccc",
            "id": 1651,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAllInfoData",
            "nameLocation": "934:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1648,
                  "mutability": "mutable",
                  "name": "updatedInfoData",
                  "nameLocation": "964:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "952:27:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$1644_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 1647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1646,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1644,
                      "src": "952:4:7"
                    },
                    "referencedDeclaration": 1644,
                    "src": "952:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$1644_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:29:7"
            },
            "returnParameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:0:7"
            },
            "scope": 1698,
            "src": "925:65:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1652,
              "nodeType": "StructuredDocumentation",
              "src": "998:254:7",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "d355f006",
            "id": 1658,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "1267:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1292:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1658,
                  "src": "1277:28:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$1635_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 1654,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1653,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1635,
                      "src": "1277:7:7"
                    },
                    "referencedDeclaration": 1635,
                    "src": "1277:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$1635_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1276:30:7"
            },
            "returnParameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:7"
            },
            "scope": 1698,
            "src": "1258:58:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1659,
              "nodeType": "StructuredDocumentation",
              "src": "1324:313:7",
              "text": " @notice Update all Rewards by removing each current reward and then adding the new levels.\n @dev Only the manager must be able to call it.\n @param updatedRewardsData Rewards[] Array of Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "ab1b498b",
            "id": 1666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAllRewardsData",
            "nameLocation": "1652:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "updatedRewardsData",
                  "nameLocation": "1690:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1666,
                  "src": "1673:35:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rewards_$1635_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ICampaign.Rewards[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1661,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1660,
                        "name": "Rewards",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1635,
                        "src": "1673:7:7"
                      },
                      "referencedDeclaration": 1635,
                      "src": "1673:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rewards_$1635_storage_ptr",
                        "typeString": "struct ICampaign.Rewards"
                      }
                    },
                    "id": 1662,
                    "nodeType": "ArrayTypeName",
                    "src": "1673:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$1635_storage_$dyn_storage_ptr",
                      "typeString": "struct ICampaign.Rewards[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1672:37:7"
            },
            "returnParameters": {
              "id": 1665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:7"
            },
            "scope": 1698,
            "src": "1643:76:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1667,
              "nodeType": "StructuredDocumentation",
              "src": "1727:327:7",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\n @param rewardIndex uint256 Index of the reward to update"
            },
            "functionSelector": "2d757615",
            "id": 1675,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateRewardData",
            "nameLocation": "2069:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "2102:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "2087:28:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$1635_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 1669,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1668,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1635,
                      "src": "2087:7:7"
                    },
                    "referencedDeclaration": 1635,
                    "src": "2087:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$1635_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1672,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2124:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "2116:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2085:51:7"
            },
            "returnParameters": {
              "id": 1674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2145:0:7"
            },
            "scope": 1698,
            "src": "2060:86:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1676,
              "nodeType": "StructuredDocumentation",
              "src": "2154:175:7",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param rewardIndex uint256 Index of the reward to delete"
            },
            "functionSelector": "e7cf1ab7",
            "id": 1681,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "2344:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2365:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "2357:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:21:7"
            },
            "returnParameters": {
              "id": 1680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:7"
            },
            "scope": 1698,
            "src": "2335:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1682,
              "nodeType": "StructuredDocumentation",
              "src": "2395:149:7",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 1685,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2559:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2573:2:7"
            },
            "returnParameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2584:0:7"
            },
            "scope": 1698,
            "src": "2550:35:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1686,
              "nodeType": "StructuredDocumentation",
              "src": "2593:182:7",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param newManager address Address of the new manager"
            },
            "functionSelector": "58aba00f",
            "id": 1691,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "2790:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "2812:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1691,
                  "src": "2804:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2803:20:7"
            },
            "returnParameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2832:0:7"
            },
            "scope": 1698,
            "src": "2781:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1692,
              "nodeType": "StructuredDocumentation",
              "src": "2841:228:7",
              "text": " @notice Allow the factory to setup a new one in case of migration.\n @dev Used for mainly for pointing the right factory during the deletion\n @param newFactory address Address of the new factory"
            },
            "functionSelector": "d9f165dc",
            "id": 1697,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFactory",
            "nameLocation": "3084:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1694,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "3106:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1697,
                  "src": "3098:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3097:20:7"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3126:0:7"
            },
            "scope": 1698,
            "src": "3075:52:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1699,
        "src": "240:2890:7",
        "usedErrors": []
      }
    ],
    "src": "33:3099:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-18T20:04:17.106Z",
  "devdoc": {
    "details": "Interface for the Campaign contract",
    "kind": "dev",
    "methods": {
      "addReward((string,string,uint256,uint256,uint256,uint256,bool))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newRewardData": "Rewards Object that contains all the needed information following the Rewards struct for the campaign"
        }
      },
      "deleteCampaign()": {
        "details": "It's the entry point for deleting a campaign. Only the manager must be able to call it"
      },
      "deleteReward(uint256)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "rewardIndex": "uint256 Index of the reward to delete"
        }
      },
      "updateAllInfoData((string,string,uint256,uint256))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "updatedInfoData": "Info Object that contains all the new information following the Info struct for the campaign"
        }
      },
      "updateAllRewardsData((string,string,uint256,uint256,uint256,uint256,bool)[])": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "updatedRewardsData": "Rewards[] Array of Object that contains all the needed information following the Rewards struct for the campaign"
        }
      },
      "updateFactory(address)": {
        "details": "Used for mainly for pointing the right factory during the deletion",
        "params": {
          "newFactory": "address Address of the new factory"
        }
      },
      "updateManager(address)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newManager": "address Address of the new manager"
        }
      },
      "updateRewardData((string,string,uint256,uint256,uint256,uint256,bool),uint256)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newRewardData": "Rewards Object that contains the new data to set following the Rewards struct for the campaign",
          "rewardIndex": "uint256 Index of the reward to update"
        }
      }
    },
    "title": "ICampaign",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addReward((string,string,uint256,uint256,uint256,uint256,bool))": {
        "notice": "Add a new reward level to the campaign."
      },
      "deleteCampaign()": {
        "notice": "Delete the campaign."
      },
      "deleteReward(uint256)": {
        "notice": "Delete a reward by its Id."
      },
      "updateAllInfoData((string,string,uint256,uint256))": {
        "notice": "Update all the information in the struct Info for the campaign."
      },
      "updateAllRewardsData((string,string,uint256,uint256,uint256,uint256,bool)[])": {
        "notice": "Update all Rewards by removing each current reward and then adding the new levels."
      },
      "updateFactory(address)": {
        "notice": "Allow the factory to setup a new one in case of migration."
      },
      "updateManager(address)": {
        "notice": "Allow the manager to setup a new one."
      },
      "updateRewardData((string,string,uint256,uint256,uint256,uint256,bool),uint256)": {
        "notice": "Update the data of a specific reward regarding its id."
      }
    },
    "notice": "The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.",
    "version": 1
  }
}