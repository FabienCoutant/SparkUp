{
  "contractName": "ICampaign",
  "abi": [
    {
      "inputs": [],
      "name": "getCampaignInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadlineDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadlineDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "updatedInfoData",
          "type": "tuple"
        }
      ],
      "name": "updateCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "newRewardData",
          "type": "tuple"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "newRewardData",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "rewardIndex",
          "type": "uint256"
        }
      ],
      "name": "updateReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rewardIndex",
          "type": "uint256"
        }
      ],
      "name": "deleteReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "updateManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFactory",
          "type": "address"
        }
      ],
      "name": "updateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publishCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"newRewardData\",\"type\":\"tuple\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"}],\"name\":\"deleteReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadlineDate\",\"type\":\"uint256\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publishCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadlineDate\",\"type\":\"uint256\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"updatedInfoData\",\"type\":\"tuple\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"updateManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"newRewardData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"}],\"name\":\"updateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the Campaign contract\",\"kind\":\"dev\",\"methods\":{\"addReward((string,string,uint256,uint256,uint256,uint256,bool))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newRewardData\":\"Rewards Object that contains all the needed information following the Rewards struct for the campaign\"}},\"deleteCampaign()\":{\"details\":\"It's the entry point for deleting a campaign. Only the manager must be able to call it\"},\"deleteReward(uint256)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"rewardIndex\":\"uint256 Index of the reward to delete\"}},\"updateCampaign((string,string,uint256,uint256))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"updatedInfoData\":\"Info Object that contains all the new information following the Info struct for the campaign\"}},\"updateFactory(address)\":{\"details\":\"Used for mainly for pointing the right factory during the deletion\",\"params\":{\"newFactory\":\"address Address of the new factory\"}},\"updateManager(address)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newManager\":\"address Address of the new manager\"}},\"updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newRewardData\":\"Rewards Object that contains the new data to set following the Rewards struct for the campaign\",\"rewardIndex\":\"uint256 Index of the reward to update\"}}},\"title\":\"ICampaign\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addReward((string,string,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Add a new reward level to the campaign.\"},\"deleteCampaign()\":{\"notice\":\"Delete the campaign.\"},\"deleteReward(uint256)\":{\"notice\":\"Delete a reward by its Id.\"},\"getCampaignInfo()\":{\"notice\":\"Returns the campaign information in the struct Info plus de createAt and the managerAddress.\"},\"updateCampaign((string,string,uint256,uint256))\":{\"notice\":\"Update the campaign information in the struct Info.\"},\"updateFactory(address)\":{\"notice\":\"Allow the factory to setup a new one in case of migration.\"},\"updateManager(address)\":{\"notice\":\"Allow the manager to setup a new one.\"},\"updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)\":{\"notice\":\"Update the data of a specific reward regarding its id.\"}},\"notice\":\"The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":\"ICampaign\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0xd03561629d4946229246d5a93577ee252c118d41b45fa7403e750f5d5ccfbf69\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e1e196619a4c9f7ff03d322633ef6b8c97c7eb7429d41ff74c500d3878deee1\",\"dweb:/ipfs/QmW4r2R2QuYjWAQfV3pNTW98R7PRPPSrFfbxfPbVMj14JF\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.6;\r\n\r\n/**\r\n* @title ICampaign\r\n* @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\r\n* @dev Interface for the Campaign contract\r\n*/\r\ninterface ICampaign {\r\n\r\n    struct Rewards {\r\n        string title;\r\n        string description;\r\n        uint256 minimumContribution;\r\n        uint256 amount;\r\n        uint256 stockLimit;\r\n        uint256 nbContributors;\r\n        bool isStockLimited;\r\n    }\r\n\r\n    struct Info {\r\n        string title;\r\n        string description;\r\n        uint256 fundingGoal;\r\n        uint256 deadlineDate;\r\n    }\r\n\r\n    enum WorkflowStatus {\r\n        CampaignDrafted,\r\n        CampaignPublished,\r\n        FundingComplete,\r\n        FundingFailed,\r\n        CampaignCompleted,\r\n        CampaignDeleted\r\n    }\r\n\r\n    /**\r\n     * @notice Returns the campaign information in the struct Info plus de createAt and the managerAddress.\r\n     */\r\n    function getCampaignInfo() external returns(Info memory, uint, address);\r\n\r\n    /**\r\n     * @notice Update the campaign information in the struct Info.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign\r\n     */\r\n    function updateCampaign(Info memory updatedInfoData) external;\r\n\r\n    /**\r\n     * @notice Add a new reward level to the campaign.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign\r\n     */\r\n    function addReward(Rewards memory newRewardData) external;\r\n\r\n    /**\r\n     * @notice Update the data of a specific reward regarding its id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\r\n     * @param rewardIndex uint256 Index of the reward to update\r\n     */\r\n    function updateReward( Rewards memory newRewardData,uint256 rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete a reward by its Id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param rewardIndex uint256 Index of the reward to delete\r\n     */\r\n    function deleteReward(uint256 rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete the campaign.\r\n     * @dev It's the entry point for deleting a campaign. Only the manager must be able to call it\r\n     */\r\n    function deleteCampaign() external;\r\n\r\n    /**\r\n     * @notice Allow the manager to setup a new one.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newManager address Address of the new manager\r\n     */\r\n    function updateManager(address newManager) external;\r\n\r\n    /**\r\n     * @notice Allow the factory to setup a new one in case of migration.\r\n     * @dev Used for mainly for pointing the right factory during the deletion\r\n     * @param newFactory address Address of the new factory\r\n     */\r\n    function updateFactory(address newFactory) external;\r\n\r\n    function publishCampaign() external;\r\n}\r\n",
  "sourcePath": "A:/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
  "ast": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        93
      ]
    },
    "id": 94,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "63:179:0",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 93,
        "linearizedBaseContracts": [
          93
        ],
        "name": "ICampaign",
        "nameLocation": "254:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 4,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "306:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "299:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "329:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "322:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "359:19:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "351:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "397:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "389:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "422:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "414:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "451:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "443:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "443:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "481:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "476:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 15,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "476:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "280:7:0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "273:230:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 26,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "541:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "534:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 18,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "564:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "557:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 20,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "557:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "594:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "586:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "586:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "deadlineDate",
                "nameLocation": "624:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "616:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "518:4:0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "511:133:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.WorkflowStatus",
            "id": 33,
            "members": [
              {
                "id": 27,
                "name": "CampaignDrafted",
                "nameLocation": "683:15:0",
                "nodeType": "EnumValue",
                "src": "683:15:0"
              },
              {
                "id": 28,
                "name": "CampaignPublished",
                "nameLocation": "709:17:0",
                "nodeType": "EnumValue",
                "src": "709:17:0"
              },
              {
                "id": 29,
                "name": "FundingComplete",
                "nameLocation": "737:15:0",
                "nodeType": "EnumValue",
                "src": "737:15:0"
              },
              {
                "id": 30,
                "name": "FundingFailed",
                "nameLocation": "763:13:0",
                "nodeType": "EnumValue",
                "src": "763:13:0"
              },
              {
                "id": 31,
                "name": "CampaignCompleted",
                "nameLocation": "787:17:0",
                "nodeType": "EnumValue",
                "src": "787:17:0"
              },
              {
                "id": 32,
                "name": "CampaignDeleted",
                "nameLocation": "815:15:0",
                "nodeType": "EnumValue",
                "src": "815:15:0"
              }
            ],
            "name": "WorkflowStatus",
            "nameLocation": "657:14:0",
            "nodeType": "EnumDefinition",
            "src": "652:185:0"
          },
          {
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "845:121:0",
              "text": " @notice Returns the campaign information in the struct Info plus de createAt and the managerAddress."
            },
            "functionSelector": "d6290cd7",
            "id": 44,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCampaignInfo",
            "nameLocation": "981:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1016:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$26_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 37,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "1016:4:0"
                    },
                    "referencedDeclaration": 26,
                    "src": "1016:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$26_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1029:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1035:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:28:0"
            },
            "scope": 93,
            "src": "972:72:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "1052:259:0",
              "text": " @notice Update the campaign information in the struct Info.\n @dev Only the manager must be able to call it.\n @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "37acecce",
            "id": 51,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCampaign",
            "nameLocation": "1326:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "updatedInfoData",
                  "nameLocation": "1353:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1341:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$26_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 47,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "1341:4:0"
                    },
                    "referencedDeclaration": 26,
                    "src": "1341:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$26_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:29:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:0"
            },
            "scope": 93,
            "src": "1317:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 52,
              "nodeType": "StructuredDocumentation",
              "src": "1387:254:0",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "d355f006",
            "id": 58,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "1656:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1681:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1666:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$17_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 54,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "1666:7:0"
                    },
                    "referencedDeclaration": 17,
                    "src": "1666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$17_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:30:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1704:0:0"
            },
            "scope": 93,
            "src": "1647:58:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "1713:327:0",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\n @param rewardIndex uint256 Index of the reward to update"
            },
            "functionSelector": "56212d59",
            "id": 67,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "2055:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "2084:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2069:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$17_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 61,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "2069:7:0"
                    },
                    "referencedDeclaration": 17,
                    "src": "2069:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$17_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2106:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2098:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:51:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:0:0"
            },
            "scope": 93,
            "src": "2046:82:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "2136:175:0",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param rewardIndex uint256 Index of the reward to delete"
            },
            "functionSelector": "e7cf1ab7",
            "id": 73,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "2326:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2347:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "2339:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:21:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:0"
            },
            "scope": 93,
            "src": "2317:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "2377:149:0",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 77,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2541:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:2:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2566:0:0"
            },
            "scope": 93,
            "src": "2532:35:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "2575:182:0",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param newManager address Address of the new manager"
            },
            "functionSelector": "58aba00f",
            "id": 83,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "2772:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "2794:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "2786:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2786:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2785:20:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:0:0"
            },
            "scope": 93,
            "src": "2763:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2823:228:0",
              "text": " @notice Allow the factory to setup a new one in case of migration.\n @dev Used for mainly for pointing the right factory during the deletion\n @param newFactory address Address of the new factory"
            },
            "functionSelector": "d9f165dc",
            "id": 89,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFactory",
            "nameLocation": "3066:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "3088:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "3080:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3080:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:20:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:0:0"
            },
            "scope": 93,
            "src": "3057:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "7ef59f84",
            "id": 92,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "publishCampaign",
            "nameLocation": "3126:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3141:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3152:0:0"
            },
            "scope": 93,
            "src": "3117:36:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 94,
        "src": "244:2912:0",
        "usedErrors": []
      }
    ],
    "src": "37:3121:0"
  },
  "legacyAST": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        93
      ]
    },
    "id": 94,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "63:179:0",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 93,
        "linearizedBaseContracts": [
          93
        ],
        "name": "ICampaign",
        "nameLocation": "254:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 4,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "306:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "299:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "329:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "322:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "359:19:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "351:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "397:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "389:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "422:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "414:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "451:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "443:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "443:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "481:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "476:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 15,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "476:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "280:7:0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "273:230:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 26,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "541:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "534:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 18,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "564:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "557:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 20,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "557:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "594:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "586:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "586:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "deadlineDate",
                "nameLocation": "624:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "616:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "518:4:0",
            "nodeType": "StructDefinition",
            "scope": 93,
            "src": "511:133:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.WorkflowStatus",
            "id": 33,
            "members": [
              {
                "id": 27,
                "name": "CampaignDrafted",
                "nameLocation": "683:15:0",
                "nodeType": "EnumValue",
                "src": "683:15:0"
              },
              {
                "id": 28,
                "name": "CampaignPublished",
                "nameLocation": "709:17:0",
                "nodeType": "EnumValue",
                "src": "709:17:0"
              },
              {
                "id": 29,
                "name": "FundingComplete",
                "nameLocation": "737:15:0",
                "nodeType": "EnumValue",
                "src": "737:15:0"
              },
              {
                "id": 30,
                "name": "FundingFailed",
                "nameLocation": "763:13:0",
                "nodeType": "EnumValue",
                "src": "763:13:0"
              },
              {
                "id": 31,
                "name": "CampaignCompleted",
                "nameLocation": "787:17:0",
                "nodeType": "EnumValue",
                "src": "787:17:0"
              },
              {
                "id": 32,
                "name": "CampaignDeleted",
                "nameLocation": "815:15:0",
                "nodeType": "EnumValue",
                "src": "815:15:0"
              }
            ],
            "name": "WorkflowStatus",
            "nameLocation": "657:14:0",
            "nodeType": "EnumDefinition",
            "src": "652:185:0"
          },
          {
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "845:121:0",
              "text": " @notice Returns the campaign information in the struct Info plus de createAt and the managerAddress."
            },
            "functionSelector": "d6290cd7",
            "id": 44,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCampaignInfo",
            "nameLocation": "981:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:2:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1016:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$26_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 37,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "1016:4:0"
                    },
                    "referencedDeclaration": 26,
                    "src": "1016:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$26_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1029:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1035:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:28:0"
            },
            "scope": 93,
            "src": "972:72:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "1052:259:0",
              "text": " @notice Update the campaign information in the struct Info.\n @dev Only the manager must be able to call it.\n @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "37acecce",
            "id": 51,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCampaign",
            "nameLocation": "1326:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "updatedInfoData",
                  "nameLocation": "1353:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1341:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$26_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 47,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26,
                      "src": "1341:4:0"
                    },
                    "referencedDeclaration": 26,
                    "src": "1341:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$26_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:29:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1378:0:0"
            },
            "scope": 93,
            "src": "1317:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 52,
              "nodeType": "StructuredDocumentation",
              "src": "1387:254:0",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "d355f006",
            "id": 58,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "1656:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1681:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1666:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$17_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 54,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "1666:7:0"
                    },
                    "referencedDeclaration": 17,
                    "src": "1666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$17_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1665:30:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1704:0:0"
            },
            "scope": 93,
            "src": "1647:58:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "1713:327:0",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\n @param rewardIndex uint256 Index of the reward to update"
            },
            "functionSelector": "56212d59",
            "id": 67,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "2055:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "2084:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2069:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$17_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 61,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17,
                      "src": "2069:7:0"
                    },
                    "referencedDeclaration": 17,
                    "src": "2069:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$17_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2106:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "2098:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:51:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2127:0:0"
            },
            "scope": 93,
            "src": "2046:82:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "2136:175:0",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param rewardIndex uint256 Index of the reward to delete"
            },
            "functionSelector": "e7cf1ab7",
            "id": 73,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "2326:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "2347:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "2339:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:21:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:0"
            },
            "scope": 93,
            "src": "2317:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "2377:149:0",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 77,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2541:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2555:2:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2566:0:0"
            },
            "scope": 93,
            "src": "2532:35:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 78,
              "nodeType": "StructuredDocumentation",
              "src": "2575:182:0",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param newManager address Address of the new manager"
            },
            "functionSelector": "58aba00f",
            "id": 83,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "2772:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "2794:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "2786:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2786:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2785:20:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2814:0:0"
            },
            "scope": 93,
            "src": "2763:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2823:228:0",
              "text": " @notice Allow the factory to setup a new one in case of migration.\n @dev Used for mainly for pointing the right factory during the deletion\n @param newFactory address Address of the new factory"
            },
            "functionSelector": "d9f165dc",
            "id": 89,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFactory",
            "nameLocation": "3066:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "3088:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "3080:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3080:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3079:20:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:0:0"
            },
            "scope": 93,
            "src": "3057:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "7ef59f84",
            "id": 92,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "publishCampaign",
            "nameLocation": "3126:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3141:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3152:0:0"
            },
            "scope": 93,
            "src": "3117:36:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 94,
        "src": "244:2912:0",
        "usedErrors": []
      }
    ],
    "src": "37:3121:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-25T08:13:44.652Z",
  "devdoc": {
    "details": "Interface for the Campaign contract",
    "kind": "dev",
    "methods": {
      "addReward((string,string,uint256,uint256,uint256,uint256,bool))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newRewardData": "Rewards Object that contains all the needed information following the Rewards struct for the campaign"
        }
      },
      "deleteCampaign()": {
        "details": "It's the entry point for deleting a campaign. Only the manager must be able to call it"
      },
      "deleteReward(uint256)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "rewardIndex": "uint256 Index of the reward to delete"
        }
      },
      "updateCampaign((string,string,uint256,uint256))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "updatedInfoData": "Info Object that contains all the new information following the Info struct for the campaign"
        }
      },
      "updateFactory(address)": {
        "details": "Used for mainly for pointing the right factory during the deletion",
        "params": {
          "newFactory": "address Address of the new factory"
        }
      },
      "updateManager(address)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newManager": "address Address of the new manager"
        }
      },
      "updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newRewardData": "Rewards Object that contains the new data to set following the Rewards struct for the campaign",
          "rewardIndex": "uint256 Index of the reward to update"
        }
      }
    },
    "title": "ICampaign",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addReward((string,string,uint256,uint256,uint256,uint256,bool))": {
        "notice": "Add a new reward level to the campaign."
      },
      "deleteCampaign()": {
        "notice": "Delete the campaign."
      },
      "deleteReward(uint256)": {
        "notice": "Delete a reward by its Id."
      },
      "getCampaignInfo()": {
        "notice": "Returns the campaign information in the struct Info plus de createAt and the managerAddress."
      },
      "updateCampaign((string,string,uint256,uint256))": {
        "notice": "Update the campaign information in the struct Info."
      },
      "updateFactory(address)": {
        "notice": "Allow the factory to setup a new one in case of migration."
      },
      "updateManager(address)": {
        "notice": "Allow the manager to setup a new one."
      },
      "updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)": {
        "notice": "Update the data of a specific reward regarding its id."
      }
    },
    "notice": "The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.",
    "version": 1
  }
}