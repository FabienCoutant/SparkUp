{
  "contractName": "ICampaign",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fundingGoal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "durationDays",
              "type": "uint256"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "updatedInfoData",
          "type": "tuple"
        }
      ],
      "name": "updateCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "newRewardData",
          "type": "tuple"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumContribution",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stockLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbContributors",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "newRewardData",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "rewardIndex",
          "type": "uint256"
        }
      ],
      "name": "updateReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rewardIndex",
          "type": "uint256"
        }
      ],
      "name": "deleteReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "updateManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFactory",
          "type": "address"
        }
      ],
      "name": "updateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"newRewardData\",\"type\":\"tuple\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"}],\"name\":\"deleteReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fundingGoal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationDays\",\"type\":\"uint256\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"updatedInfoData\",\"type\":\"tuple\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"updateManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stockLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbContributors\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"newRewardData\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rewardIndex\",\"type\":\"uint256\"}],\"name\":\"updateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the Campaign contract\",\"kind\":\"dev\",\"methods\":{\"addReward((string,string,uint256,uint256,uint256,uint256,bool))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newRewardData\":\"Rewards Object that contains all the needed information following the Rewards struct for the campaign\"}},\"deleteCampaign()\":{\"details\":\"It's the entry point for deleting a campaign. Only the manager must be able to call it\"},\"deleteReward(uint256)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"rewardIndex\":\"uint256 Index of the reward to delete\"}},\"updateCampaign((string,string,uint256,uint256))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"updatedInfoData\":\"Info Object that contains all the new information following the Info struct for the campaign\"}},\"updateFactory(address)\":{\"details\":\"Used for mainly for pointing the right factory during the deletion\",\"params\":{\"newFactory\":\"address Address of the new factory\"}},\"updateManager(address)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newManager\":\"address Address of the new manager\"}},\"updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"newRewardData\":\"Rewards Object that contains the new data to set following the Rewards struct for the campaign\",\"rewardIndex\":\"uint256 Index of the reward to update\"}}},\"title\":\"ICampaign\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addReward((string,string,uint256,uint256,uint256,uint256,bool))\":{\"notice\":\"Add a new reward level to the campaign.\"},\"deleteCampaign()\":{\"notice\":\"Delete the campaign.\"},\"deleteReward(uint256)\":{\"notice\":\"Delete a reward by its Id.\"},\"updateCampaign((string,string,uint256,uint256))\":{\"notice\":\"Update the campaign information in the struct Info.\"},\"updateFactory(address)\":{\"notice\":\"Allow the factory to setup a new one in case of migration.\"},\"updateManager(address)\":{\"notice\":\"Allow the manager to setup a new one.\"},\"updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)\":{\"notice\":\"Update the data of a specific reward regarding its id.\"}},\"notice\":\"The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":\"ICampaign\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0xe1966470d6b235c3d596e18ff1e67036c0996bd693359dc2045b19b2ac50422e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29adb7479e255ef663c3d587d5902e8307b8918ea0dd3a87af0a59c6646f2071\",\"dweb:/ipfs/QmbQUba1N8RsY7aEWVJwG8zuQvnmnTHVCrVuUvNDCy3MqD\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.6;\r\n\r\n/**\r\n* @title ICampaign\r\n* @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\r\n* @dev Interface for the Campaign contract\r\n*/\r\ninterface ICampaign {\r\n\r\n    struct Rewards {\r\n        string title;\r\n        string description;\r\n        uint256 minimumContribution;\r\n        uint256 amount;\r\n        uint256 stockLimit;\r\n        uint256 nbContributors;\r\n        bool isStockLimited;\r\n    }\r\n\r\n    struct Info {\r\n        string title;\r\n        string description;\r\n        uint256 fundingGoal;\r\n        uint256 durationDays;\r\n    }\r\n\r\n    /**\r\n     * @notice Update the campaign information in the struct Info.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign\r\n     */\r\n    function updateCampaign(Info memory updatedInfoData) external;\r\n\r\n    /**\r\n     * @notice Add a new reward level to the campaign.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign\r\n     */\r\n    function addReward(Rewards memory newRewardData) external;\r\n\r\n    /**\r\n     * @notice Update the data of a specific reward regarding its id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\r\n     * @param rewardIndex uint256 Index of the reward to update\r\n     */\r\n    function updateReward( Rewards memory newRewardData,uint256 rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete a reward by its Id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param rewardIndex uint256 Index of the reward to delete\r\n     */\r\n    function deleteReward(uint256 rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete the campaign.\r\n     * @dev It's the entry point for deleting a campaign. Only the manager must be able to call it\r\n     */\r\n    function deleteCampaign() external;\r\n\r\n    /**\r\n     * @notice Allow the manager to setup a new one.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param newManager address Address of the new manager\r\n     */\r\n    function updateManager(address newManager) external;\r\n\r\n    /**\r\n     * @notice Allow the factory to setup a new one in case of migration.\r\n     * @dev Used for mainly for pointing the right factory during the deletion\r\n     * @param newFactory address Address of the new factory\r\n     */\r\n    function updateFactory(address newFactory) external;\r\n}\r\n",
  "sourcePath": "A:\\Programing\\Projet_Final\\SparkUp\\contracts\\interfaces\\ICampaign.sol",
  "ast": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        750
      ]
    },
    "id": 751,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 679,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 680,
          "nodeType": "StructuredDocumentation",
          "src": "63:179:2",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 750,
        "linearizedBaseContracts": [
          750
        ],
        "name": "ICampaign",
        "nameLocation": "254:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 695,
            "members": [
              {
                "constant": false,
                "id": 682,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "306:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "299:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 681,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 684,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "329:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "322:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 683,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 686,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "359:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "351:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 685,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 688,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "397:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "389:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 687,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 690,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "422:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "414:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 689,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 692,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "451:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "443:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 691,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "443:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 694,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "481:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "476:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 693,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "476:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "280:7:2",
            "nodeType": "StructDefinition",
            "scope": 750,
            "src": "273:230:2",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 704,
            "members": [
              {
                "constant": false,
                "id": 697,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "541:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "534:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 696,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 699,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "564:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "557:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 698,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "557:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 701,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "594:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "586:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 700,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "586:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 703,
                "mutability": "mutable",
                "name": "durationDays",
                "nameLocation": "624:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "616:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 702,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "518:4:2",
            "nodeType": "StructDefinition",
            "scope": 750,
            "src": "511:133:2",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 705,
              "nodeType": "StructuredDocumentation",
              "src": "652:259:2",
              "text": " @notice Update the campaign information in the struct Info.\n @dev Only the manager must be able to call it.\n @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "37acecce",
            "id": 711,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCampaign",
            "nameLocation": "926:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "updatedInfoData",
                  "nameLocation": "953:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "941:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$704_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 707,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 706,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 704,
                      "src": "941:4:2"
                    },
                    "referencedDeclaration": 704,
                    "src": "941:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$704_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:29:2"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:2"
            },
            "scope": 750,
            "src": "917:62:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 712,
              "nodeType": "StructuredDocumentation",
              "src": "987:254:2",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "d355f006",
            "id": 718,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "1256:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1281:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "1266:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$695_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 714,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 713,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 695,
                      "src": "1266:7:2"
                    },
                    "referencedDeclaration": 695,
                    "src": "1266:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$695_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1265:30:2"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:2"
            },
            "scope": 750,
            "src": "1247:58:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "1313:327:2",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\n @param rewardIndex uint256 Index of the reward to update"
            },
            "functionSelector": "56212d59",
            "id": 727,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "1655:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1684:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "1669:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$695_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 721,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 720,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 695,
                      "src": "1669:7:2"
                    },
                    "referencedDeclaration": 695,
                    "src": "1669:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$695_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "1706:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "1698:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1667:51:2"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:2"
            },
            "scope": 750,
            "src": "1646:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 728,
              "nodeType": "StructuredDocumentation",
              "src": "1736:175:2",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param rewardIndex uint256 Index of the reward to delete"
            },
            "functionSelector": "e7cf1ab7",
            "id": 733,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "1926:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "1947:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "1939:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1938:21:2"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:0:2"
            },
            "scope": 750,
            "src": "1917:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 734,
              "nodeType": "StructuredDocumentation",
              "src": "1977:149:2",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 737,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2141:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:2"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2166:0:2"
            },
            "scope": 750,
            "src": "2132:35:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "2175:182:2",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param newManager address Address of the new manager"
            },
            "functionSelector": "58aba00f",
            "id": 743,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "2372:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "2394:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "2386:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:20:2"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:2"
            },
            "scope": 750,
            "src": "2363:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 744,
              "nodeType": "StructuredDocumentation",
              "src": "2423:228:2",
              "text": " @notice Allow the factory to setup a new one in case of migration.\n @dev Used for mainly for pointing the right factory during the deletion\n @param newFactory address Address of the new factory"
            },
            "functionSelector": "d9f165dc",
            "id": 749,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFactory",
            "nameLocation": "2666:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "2688:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "2680:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2679:20:2"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2708:0:2"
            },
            "scope": 750,
            "src": "2657:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 751,
        "src": "244:2468:2",
        "usedErrors": []
      }
    ],
    "src": "37:2677:2"
  },
  "legacyAST": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        750
      ]
    },
    "id": 751,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 679,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 680,
          "nodeType": "StructuredDocumentation",
          "src": "63:179:2",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 750,
        "linearizedBaseContracts": [
          750
        ],
        "name": "ICampaign",
        "nameLocation": "254:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 695,
            "members": [
              {
                "constant": false,
                "id": 682,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "306:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "299:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 681,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 684,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "329:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "322:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 683,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 686,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "359:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "351:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 685,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 688,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "397:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "389:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 687,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 690,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "422:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "414:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 689,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 692,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "451:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "443:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 691,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "443:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 694,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "481:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 695,
                "src": "476:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 693,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "476:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "280:7:2",
            "nodeType": "StructDefinition",
            "scope": 750,
            "src": "273:230:2",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 704,
            "members": [
              {
                "constant": false,
                "id": 697,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "541:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "534:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 696,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 699,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "564:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "557:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 698,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "557:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 701,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "594:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "586:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 700,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "586:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 703,
                "mutability": "mutable",
                "name": "durationDays",
                "nameLocation": "624:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 704,
                "src": "616:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 702,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "518:4:2",
            "nodeType": "StructDefinition",
            "scope": 750,
            "src": "511:133:2",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 705,
              "nodeType": "StructuredDocumentation",
              "src": "652:259:2",
              "text": " @notice Update the campaign information in the struct Info.\n @dev Only the manager must be able to call it.\n @param updatedInfoData Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "37acecce",
            "id": 711,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCampaign",
            "nameLocation": "926:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "updatedInfoData",
                  "nameLocation": "953:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "941:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$704_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 707,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 706,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 704,
                      "src": "941:4:2"
                    },
                    "referencedDeclaration": 704,
                    "src": "941:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$704_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:29:2"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:2"
            },
            "scope": 750,
            "src": "917:62:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 712,
              "nodeType": "StructuredDocumentation",
              "src": "987:254:2",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains all the needed information following the Rewards struct for the campaign"
            },
            "functionSelector": "d355f006",
            "id": 718,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "1256:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1281:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "1266:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$695_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 714,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 713,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 695,
                      "src": "1266:7:2"
                    },
                    "referencedDeclaration": 695,
                    "src": "1266:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$695_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1265:30:2"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:2"
            },
            "scope": 750,
            "src": "1247:58:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "1313:327:2",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param newRewardData Rewards Object that contains the new data to set following the Rewards struct for the campaign\n @param rewardIndex uint256 Index of the reward to update"
            },
            "functionSelector": "56212d59",
            "id": 727,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "1655:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 722,
                  "mutability": "mutable",
                  "name": "newRewardData",
                  "nameLocation": "1684:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "1669:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$695_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 721,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 720,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 695,
                      "src": "1669:7:2"
                    },
                    "referencedDeclaration": 695,
                    "src": "1669:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$695_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 724,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "1706:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 727,
                  "src": "1698:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1667:51:2"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:2"
            },
            "scope": 750,
            "src": "1646:82:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 728,
              "nodeType": "StructuredDocumentation",
              "src": "1736:175:2",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param rewardIndex uint256 Index of the reward to delete"
            },
            "functionSelector": "e7cf1ab7",
            "id": 733,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "1926:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "rewardIndex",
                  "nameLocation": "1947:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "1939:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1938:21:2"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:0:2"
            },
            "scope": 750,
            "src": "1917:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 734,
              "nodeType": "StructuredDocumentation",
              "src": "1977:149:2",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 737,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2141:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:2"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2166:0:2"
            },
            "scope": 750,
            "src": "2132:35:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 738,
              "nodeType": "StructuredDocumentation",
              "src": "2175:182:2",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param newManager address Address of the new manager"
            },
            "functionSelector": "58aba00f",
            "id": 743,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "2372:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "2394:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "2386:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:20:2"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2414:0:2"
            },
            "scope": 750,
            "src": "2363:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 744,
              "nodeType": "StructuredDocumentation",
              "src": "2423:228:2",
              "text": " @notice Allow the factory to setup a new one in case of migration.\n @dev Used for mainly for pointing the right factory during the deletion\n @param newFactory address Address of the new factory"
            },
            "functionSelector": "d9f165dc",
            "id": 749,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFactory",
            "nameLocation": "2666:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "newFactory",
                  "nameLocation": "2688:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "2680:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2680:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2679:20:2"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2708:0:2"
            },
            "scope": 750,
            "src": "2657:52:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 751,
        "src": "244:2468:2",
        "usedErrors": []
      }
    ],
    "src": "37:2677:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-22T12:36:27.296Z",
  "devdoc": {
    "details": "Interface for the Campaign contract",
    "kind": "dev",
    "methods": {
      "addReward((string,string,uint256,uint256,uint256,uint256,bool))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newRewardData": "Rewards Object that contains all the needed information following the Rewards struct for the campaign"
        }
      },
      "deleteCampaign()": {
        "details": "It's the entry point for deleting a campaign. Only the manager must be able to call it"
      },
      "deleteReward(uint256)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "rewardIndex": "uint256 Index of the reward to delete"
        }
      },
      "updateCampaign((string,string,uint256,uint256))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "updatedInfoData": "Info Object that contains all the new information following the Info struct for the campaign"
        }
      },
      "updateFactory(address)": {
        "details": "Used for mainly for pointing the right factory during the deletion",
        "params": {
          "newFactory": "address Address of the new factory"
        }
      },
      "updateManager(address)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newManager": "address Address of the new manager"
        }
      },
      "updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "newRewardData": "Rewards Object that contains the new data to set following the Rewards struct for the campaign",
          "rewardIndex": "uint256 Index of the reward to update"
        }
      }
    },
    "title": "ICampaign",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addReward((string,string,uint256,uint256,uint256,uint256,bool))": {
        "notice": "Add a new reward level to the campaign."
      },
      "deleteCampaign()": {
        "notice": "Delete the campaign."
      },
      "deleteReward(uint256)": {
        "notice": "Delete a reward by its Id."
      },
      "updateCampaign((string,string,uint256,uint256))": {
        "notice": "Update the campaign information in the struct Info."
      },
      "updateFactory(address)": {
        "notice": "Allow the factory to setup a new one in case of migration."
      },
      "updateManager(address)": {
        "notice": "Allow the manager to setup a new one."
      },
      "updateReward((string,string,uint256,uint256,uint256,uint256,bool),uint256)": {
        "notice": "Update the data of a specific reward regarding its id."
      }
    },
    "notice": "The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.",
    "version": 1
  }
}