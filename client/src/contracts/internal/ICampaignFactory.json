{
  "contractName": "ICampaignFactory",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "deadlineDate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "fundingGoal",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "infoData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "stockLimit",
              "type": "uint16"
            },
            {
              "internalType": "uint64",
              "name": "nbContributors",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "minimumContribution",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICampaign.Rewards[]",
          "name": "rewardsData",
          "type": "tuple[]"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "updateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"deadlineDate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"fundingGoal\",\"type\":\"uint128\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"infoData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"stockLimit\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"nbContributors\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"minimumContribution\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct ICampaign.Rewards[]\",\"name\":\"rewardsData\",\"type\":\"tuple[]\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the CampaignFactory contract\",\"kind\":\"dev\",\"methods\":{\"createCampaign((string,string,uint64,uint128),(string,string,bool,uint16,uint64,uint128,uint128)[])\":{\"params\":{\"infoData\":\"ICampaign.Info basic information for a campaign following the Campaign Info structure\",\"rewardsData\":\"ICampaign.Rewards array of rewards information for a campaign following the Campaign Info structure\"}},\"deleteCampaign()\":{\"details\":\"Only an contract already deployed must be able to call this function\"},\"updateOwner(address)\":{\"details\":\"Only the actual owner must be able to call this function\",\"params\":{\"newOwner\":\"address The new owner address\"}}},\"title\":\"ICampaignFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createCampaign((string,string,uint64,uint128),(string,string,bool,uint16,uint64,uint128,uint128)[])\":{\"notice\":\"Create a new Campaign contract and init it\"},\"deleteCampaign()\":{\"notice\":\"Delete a new Campaign that call this function.\"},\"updateOwner(address)\":{\"notice\":\"Allow the owner to set a new owner for the factory.\"}},\"notice\":\"The Campaign factory facilitate the deployment of new campaigns\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol\":\"ICampaignFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0x5ee9c277efd77d98f9af78ae873c3e06180e32ac4fa0ce6026e4c4b788f6e560\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8d75f88055ffa42866c54564aca0e5cbafc7d08999af809bbadf9db51c807870\",\"dweb:/ipfs/QmXWUXEA19JAD3VD8Kzz32WztSRvEwgejDMgsn1arcf9j5\"]},\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol\":{\"keccak256\":\"0x5ccf4c8db13c83973bed1dcaedced07b260b6b600cb3b4a3b1a726c877d46b8d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9e1f8dd4207636b5b0db61012f5e649fdc62801479a757468ec122e59cad9ba6\",\"dweb:/ipfs/QmPiAu5BHAuEqY7W29unyoaxJ73435YfAXQ4hYsQsn3wnA\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.8.6;\r\n\r\nimport \"../interfaces/ICampaign.sol\";\r\n\r\n/**\r\n* @title ICampaignFactory\r\n* @notice The Campaign factory facilitate the deployment of new campaigns\r\n* @dev Interface for the CampaignFactory contract\r\n*/\r\ninterface ICampaignFactory {\r\n\r\n    /**\r\n     * @notice Create a new Campaign contract and init it\r\n     * @param infoData ICampaign.Info basic information for a campaign following the Campaign Info structure\r\n     * @param rewardsData ICampaign.Rewards array of rewards information for a campaign following the Campaign Info structure\r\n     */\r\n    function createCampaign(ICampaign.Info memory infoData,ICampaign.Rewards[] memory rewardsData) external;\r\n\r\n    /**\r\n     * @notice Delete a new Campaign that call this function.\r\n     * @dev Only an contract already deployed must be able to call this function\r\n     */\r\n    function deleteCampaign() external;\r\n\r\n    /**\r\n     * @notice Allow the owner to set a new owner for the factory.\r\n     * @dev Only the actual owner must be able to call this function\r\n     * @param newOwner address The new owner address\r\n     */\r\n    function updateOwner(address newOwner) external;\r\n}\r\n",
  "sourcePath": "A:\\Programing\\Projet_Final\\SparkUp\\contracts\\interfaces\\ICampaignFactory.sol",
  "ast": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol",
    "exportedSymbols": {
      "ICampaign": [
        1548
      ],
      "ICampaignFactory": [
        1574
      ]
    },
    "id": 1575,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1550,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:3"
      },
      {
        "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
        "file": "../interfaces/ICampaign.sol",
        "id": 1551,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1549,
        "src": "63:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1552,
          "nodeType": "StructuredDocumentation",
          "src": "104:160:3",
          "text": " @title ICampaignFactory\n @notice The Campaign factory facilitate the deployment of new campaigns\n @dev Interface for the CampaignFactory contract"
        },
        "fullyImplemented": false,
        "id": 1574,
        "linearizedBaseContracts": [
          1574
        ],
        "name": "ICampaignFactory",
        "nameLocation": "276:16:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1553,
              "nodeType": "StructuredDocumentation",
              "src": "302:308:3",
              "text": " @notice Create a new Campaign contract and init it\n @param infoData ICampaign.Info basic information for a campaign following the Campaign Info structure\n @param rewardsData ICampaign.Rewards array of rewards information for a campaign following the Campaign Info structure"
            },
            "functionSelector": "6046f7fa",
            "id": 1563,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createCampaign",
            "nameLocation": "625:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "infoData",
                  "nameLocation": "662:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "640:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$1457_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 1555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1554,
                      "name": "ICampaign.Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1457,
                      "src": "640:14:3"
                    },
                    "referencedDeclaration": 1457,
                    "src": "640:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$1457_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "rewardsData",
                  "nameLocation": "698:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "671:38:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rewards_$1448_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ICampaign.Rewards[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1558,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1557,
                        "name": "ICampaign.Rewards",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1448,
                        "src": "671:17:3"
                      },
                      "referencedDeclaration": 1448,
                      "src": "671:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rewards_$1448_storage_ptr",
                        "typeString": "struct ICampaign.Rewards"
                      }
                    },
                    "id": 1559,
                    "nodeType": "ArrayTypeName",
                    "src": "671:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$1448_storage_$dyn_storage_ptr",
                      "typeString": "struct ICampaign.Rewards[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:71:3"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:3"
            },
            "scope": 1574,
            "src": "616:104:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1564,
              "nodeType": "StructuredDocumentation",
              "src": "728:157:3",
              "text": " @notice Delete a new Campaign that call this function.\n @dev Only an contract already deployed must be able to call this function"
            },
            "functionSelector": "244c3c2c",
            "id": 1567,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "900:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:2:3"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:3"
            },
            "scope": 1574,
            "src": "891:35:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1568,
              "nodeType": "StructuredDocumentation",
              "src": "934:204:3",
              "text": " @notice Allow the owner to set a new owner for the factory.\n @dev Only the actual owner must be able to call this function\n @param newOwner address The new owner address"
            },
            "functionSelector": "880cdc31",
            "id": 1573,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwner",
            "nameLocation": "1153:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1570,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1173:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1165:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:18:3"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:3"
            },
            "scope": 1574,
            "src": "1144:48:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1575,
        "src": "266:929:3",
        "usedErrors": []
      }
    ],
    "src": "37:1160:3"
  },
  "legacyAST": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol",
    "exportedSymbols": {
      "ICampaign": [
        1548
      ],
      "ICampaignFactory": [
        1574
      ]
    },
    "id": 1575,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1550,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:22:3"
      },
      {
        "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
        "file": "../interfaces/ICampaign.sol",
        "id": 1551,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1575,
        "sourceUnit": 1549,
        "src": "63:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1552,
          "nodeType": "StructuredDocumentation",
          "src": "104:160:3",
          "text": " @title ICampaignFactory\n @notice The Campaign factory facilitate the deployment of new campaigns\n @dev Interface for the CampaignFactory contract"
        },
        "fullyImplemented": false,
        "id": 1574,
        "linearizedBaseContracts": [
          1574
        ],
        "name": "ICampaignFactory",
        "nameLocation": "276:16:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1553,
              "nodeType": "StructuredDocumentation",
              "src": "302:308:3",
              "text": " @notice Create a new Campaign contract and init it\n @param infoData ICampaign.Info basic information for a campaign following the Campaign Info structure\n @param rewardsData ICampaign.Rewards array of rewards information for a campaign following the Campaign Info structure"
            },
            "functionSelector": "6046f7fa",
            "id": 1563,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createCampaign",
            "nameLocation": "625:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "infoData",
                  "nameLocation": "662:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "640:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$1457_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 1555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1554,
                      "name": "ICampaign.Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1457,
                      "src": "640:14:3"
                    },
                    "referencedDeclaration": 1457,
                    "src": "640:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$1457_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "rewardsData",
                  "nameLocation": "698:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1563,
                  "src": "671:38:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rewards_$1448_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ICampaign.Rewards[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1558,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1557,
                        "name": "ICampaign.Rewards",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1448,
                        "src": "671:17:3"
                      },
                      "referencedDeclaration": 1448,
                      "src": "671:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rewards_$1448_storage_ptr",
                        "typeString": "struct ICampaign.Rewards"
                      }
                    },
                    "id": 1559,
                    "nodeType": "ArrayTypeName",
                    "src": "671:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rewards_$1448_storage_$dyn_storage_ptr",
                      "typeString": "struct ICampaign.Rewards[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:71:3"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:3"
            },
            "scope": 1574,
            "src": "616:104:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1564,
              "nodeType": "StructuredDocumentation",
              "src": "728:157:3",
              "text": " @notice Delete a new Campaign that call this function.\n @dev Only an contract already deployed must be able to call this function"
            },
            "functionSelector": "244c3c2c",
            "id": 1567,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "900:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:2:3"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:3"
            },
            "scope": 1574,
            "src": "891:35:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1568,
              "nodeType": "StructuredDocumentation",
              "src": "934:204:3",
              "text": " @notice Allow the owner to set a new owner for the factory.\n @dev Only the actual owner must be able to call this function\n @param newOwner address The new owner address"
            },
            "functionSelector": "880cdc31",
            "id": 1573,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwner",
            "nameLocation": "1153:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1570,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1173:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1573,
                  "src": "1165:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:18:3"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:0:3"
            },
            "scope": 1574,
            "src": "1144:48:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1575,
        "src": "266:929:3",
        "usedErrors": []
      }
    ],
    "src": "37:1160:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-01T20:22:26.180Z",
  "devdoc": {
    "details": "Interface for the CampaignFactory contract",
    "kind": "dev",
    "methods": {
      "createCampaign((string,string,uint64,uint128),(string,string,bool,uint16,uint64,uint128,uint128)[])": {
        "params": {
          "infoData": "ICampaign.Info basic information for a campaign following the Campaign Info structure",
          "rewardsData": "ICampaign.Rewards array of rewards information for a campaign following the Campaign Info structure"
        }
      },
      "deleteCampaign()": {
        "details": "Only an contract already deployed must be able to call this function"
      },
      "updateOwner(address)": {
        "details": "Only the actual owner must be able to call this function",
        "params": {
          "newOwner": "address The new owner address"
        }
      }
    },
    "title": "ICampaignFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createCampaign((string,string,uint64,uint128),(string,string,bool,uint16,uint64,uint128,uint128)[])": {
        "notice": "Create a new Campaign contract and init it"
      },
      "deleteCampaign()": {
        "notice": "Delete a new Campaign that call this function."
      },
      "updateOwner(address)": {
        "notice": "Allow the owner to set a new owner for the factory."
      }
    },
    "notice": "The Campaign factory facilitate the deployment of new campaigns",
    "version": 1
  }
}